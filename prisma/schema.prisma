// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category  Category[]
  task      Task[]

  @@map("users")
}

model Category {
  id        String      @id @default(uuid())
  name      String
  color     String?
  icon      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  task      Task[]

  userId    String
  user      User @relation(fields: [userId], references: [id])

  @@map("categories")
}

model Task {
    id          String      @id @default(uuid())
    title       String
    description String?
    dueTime     DateTime
    itsDone     Boolean
    priority    String @default("medium")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    notification Notification[]

    userId      String
    user        User @relation(fields: [userId], references: [id])
    categoryId  String?
    category    Category? @relation(fields: [categoryId], references: [id])

    @@map("tasks")

}

model Notification {
  id        String @id @default(uuid())
  message   String
  createdAt DateTime @default(now())
  read      Boolean @default(false)

  userId    String
  taskId    String?

  task Task? @relation(fields: [taskId], references: [id])

}
